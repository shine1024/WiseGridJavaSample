<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>기본예제 - 기본</title>
<link rel='stylesheet' href='/css/wisegrid.css' type='text/css'>
<script type='text/javascript' src='/js/WiseGrid_TAG.js'></script>
<script type='text/javascript' src='/js/WiseGrid_Property.js'></script>
<script type='text/javascript' src='/js/WiseGrid_Basic_Sample.js'></script>

<!--
	WiseGrid 오브젝트가 생성되고 초기화된 후 발생하는 
	JavaScript Event인 Initialize()를 받아 그리드의 헤더를 셋팅한다.	
-->
<script language=javascript for="WiseGrid" event="Initialize()">
	init();
</script>

<!--  	서버와의 통신이 정상적으로 완료되면 발생한다.   -->
<script language=javascript for="WiseGrid" event="EndQuery()">
	GridEndQuery();
</script>

<!--  	WiseGrid의 셀을 클릭했을때 발생하는 Javacript Event인 CellClick()을 받아 해당하는 작업을 진행한다.  -->
<script language=javascript for="WiseGrid" event="CellClick(strColumnKey,nRow)">
	GridCellClick(strColumnKey, nRow)
</script>

<!--	 WiseGrid의 셀의 내용이 변경되었을때 발생한다. -->
<script language=javascript for="WiseGrid" event="ChangeCell(strColumnKey,nRow,nOldValue,nNewValue)">
	GridChangeCell(strColumnKey, nRow);
</script>

<!--   	 WiseGrid의 t_combo타입의 컬럼내용이 변경되었을때 발생합니다  -->
<script language=javascript for="WiseGrid" event="ChangeCombo(strColumnKey,nRow,nOldIndex,nNewIndex)">
	GridChangeCell(strColumnKey, nRow);
</script>

<script language="JavaScript">

function init() {
	var GridObj = document.WiseGrid;
	setHeader(GridObj);
	setProperty(GridObj);
	GridObj.strBgImage = "/images/unipost_logo_white.gif";
	GridObj.bUserContextMenu = true;
	 
	getdatetime();
}

function setHeader(GridObj) {		
	//그리드에 컬럼을 등록한다. 
	GridObj.AddHeader("SELECTED",		"선택",			"t_checkbox", 	2, 		40,		true);	
	GridObj.AddHeader("ITEM_FLAG", 		"자재구분",		"t_combo", 		10, 	"10%",		true);	
	GridObj.AddHeader("VENDOR_NAME", 	"제조회사",		"t_text", 		50, 	"10%",		true);
	GridObj.AddHeader("ITEM_CODE", 		"제품코드",		"t_imagetext", 	20, 	"10%",	false);
	GridObj.AddHeader("ITEM_NAME", 		"제품명", 		"t_text", 		500, 	"15%",	true);	
	GridObj.AddHeader("SPECIFICATION", 	"규격", 			"t_text", 		2000, 	"21%",	true);	
	GridObj.AddHeader("UNIT", 			"단위",			"t_combo",		10, 	50,		true);
	GridObj.AddHeader("PRICE", 			"출고가", 		"t_number", 	22.3, 	"10%",		true);	
	GridObj.AddHeader("STOCK",			"재고량", 		"t_number", 	22,		"10%",		true);
	GridObj.AddHeader("ADD_DATE",		"등록일", 		"t_date", 		8,		"7%",		true);	
	GridObj.AddHeader("CHANGE_DATE",	"수정일", 		"t_date", 		8,		"7%",		true);	
	GridObj.AddHeader("SEQ_NO",			"SEQ_NO", 		"t_text", 		8,		"0",		true);	
	
	//AddHeader를 완료한 후 헤더를 그리드에 바인딩한다
	GridObj.BoundHeader();	

	GridObj.SetColHDCheckBoxValue("SELECTED", true);

	// 스크롤 이동시에 툴팁에 보여줄 컬럼을 지정
	GridObj.SetScrollTip("ITEM_NAME");
	
	//t_checkbox 타입의 컬럼에 체크를 전체적용한다.
	GridObj.SetColHDCheckBoxVisible("SELECTED", true);
	
	//해당 컬럼을 숨긴다.
	GridObj.SetColHide("SEQ_NO", true);
	 
	//t_combo 타입의 컬럼에 Combo List 를 추가한다. 
	GridObj.AddComboListValue("ITEM_FLAG", "프로세서", "CPU"); 
	GridObj.AddComboListValue("ITEM_FLAG", "메모리", "MEM"); 
	GridObj.AddComboListValue("ITEM_FLAG", "메인보드", "MAB"); 
	GridObj.AddComboListValue("ITEM_FLAG", "그래픽카드", "VID"); 
	GridObj.AddComboListValue("ITEM_FLAG", "모니터", "MOR");
	GridObj.AddComboListValue("ITEM_FLAG", "하드디스크", "HDD");
	GridObj.AddComboListValue("ITEM_FLAG", "CDROM", "CDR");
	GridObj.AddComboListValue("ITEM_FLAG", "키보드", "KEY");
	GridObj.AddComboListValue("ITEM_FLAG", "마우스", "MOU");

	GridObj.AddComboListValue("UNIT", "EA", "EA");

	//이미지리스트에 이미지 URL을 추가한다
	GridObj.AddImageList("ITEM_CODE", "/images/bt_search.gif");

	//셀의 글자색을 적용한다.
	GridObj.SetColCellFgColor("ITEM_CODE", "0|0|255");	
	
	//t_number 타입의 컬럼을 포맷타입으로  지정한다.
	GridObj.SetNumberFormat("PRICE", "#,##0.00"); 
	GridObj.SetNumberFormat("STOCK", "#,##0"); 

	//t_date 타입의 컬럼을 포맷타입으로  지정한다.
	GridObj.SetDateFormat("ADD_DATE", "yyyy/MM/dd");
	GridObj.SetDateFormat("CHANGE_DATE", "yyyy/MM/dd");
 	
	//엑셀로 Export할때 상단에 헤더를 추가한다. 
	GridObj.SetExcelHeader("기본예제", 20, 15, "center");

	//엑셀로 Export할때 하단에 Footer를 추가한다.
 	GridObj.SetExcelFooter("Copyright 2014 UNIPOST CORP.", 15, 10, "right");

	// 컬럼의 BgColor 지정
 	GridObj.SetColCellBgColor("SELECTED","252|221|220");
 	GridObj.SetColCellBgColor("UNIT","252|221|220");
}

/* 조회 */
function doQuery() {
	var GridObj = document.WiseGrid;
	var servlet_url = "/servlet/wisegrid.sample.ExampleSelect";
	
	//WiseGrid가 서버에 전송할 Param을 셋팅한다.
	GridObj.SetParam("mode", "search");
	GridObj.SetParam("from_date",document.form.from_date.value );
	GridObj.SetParam("to_date",document.form.to_date.value);

	//WiseGrid가 서버와 통신시에 데이터를 전달한다.
	GridObj.DoQuery(servlet_url);
}

/* 로우가 체크되었는지 확인한다. */
function chkSelected() {
	var GridObj = document.WiseGrid;
	chkCount = 0;

	for(i = 0; i < GridObj.GetRowCount(); i++) { //그리드 데이터의 로우수를 반환한다. 

		if(GridObj.GetCellValue("SELECTED", i) == "1") //지정한 셀의 값을 가져온다. 
			chkCount = chkCount + 1;
	}
	
	if(chkCount == 0) {
		return false;	
	}
	return true;
}

/* 행 추가 */
function doLineInsert() {
	var GridObj = document.WiseGrid;
	
	//그리드의 마지막 열에 빈 로우를 추가한다. 
	GridObj.AddRow();
	
	//지정한 셀 SELECTED에 Active된 로우의 인덱스에 값을 넣는다.
	GridObj.SetCellValue("SELECTED",GridObj.GetActiveRowIndex(), "1");

	//ITEM_CODE 셀의 이미지 리스트에서 Active된 로우의 인덱스에 이미지를 선택한다. 
	GridObj.SetCellImage('ITEM_CODE', GridObj.GetActiveRowIndex(), 0);

	//지정한 컬럼 셀 ITEM_CODE에 Active된 로우의 인덱스의 편집을 가능하게 한다.
	GridObj.SetCellActivation("ITEM_CODE", GridObj.GetActiveRowIndex(), "edit");
}

/* EXCEL 내보내기 */
function excelDown() {
	var GridObj = document.WiseGrid;
	//그리드의 데이터를 사용자의 PC에 파일로 저장한다. SetColHide()로 숨겨진 컬럼은 내보내지 않는다. 
	GridObj.ExcelExport("", "", true, true);
}

/* WiseGrid의 셀의 내용이 변경되었을때 발생한다. */
function GridChangeCell(strColumnKey, nRow) {
	var GridObj = document.WiseGrid;
	if(strColumnKey != "SELECTED") {
		//지정한 셀 SELECTED 에서 선택된 로우에 값을 넣는다. 
		GridObj.SetCellValue("SELECTED", nRow, "1");
	}
}

/* 서버와의 통신이 정상적으로 완료되면 발생한다. */
function GridEndQuery() {
	var GridObj = document.WiseGrid;
	//서버에서 mode로 셋팅한 파라미터를 가져온다.
	var mode = GridObj.GetParam("mode");

	if(mode == "search") {
		if(GridObj.GetStatus() == "true") { // 서버에서 전송한 상태코드를 가져온다.
			//fieldset을 보이지 않게 한다.
			document.all.message.style.display="none";
			//textarea값을 비운다.
			document.form.confirm.value =null;
		} else	{ 
			var error_msg = GridObj.GetMessage(); // 서버에서 전송한 상태코드값이 false라면 에러메세지를 가져온다.
			alert(error_msg);			
		}
	} else if(mode == "insert") {
		if(GridObj.GetStatus() == "true") {// 서버에서 전송한 상태코드를 가져온다.
			//서버에서 insert_data 셋팅한 파라미터를 가져온다.
			var insert_data = GridObj.GetParam("insert_data");				
			//fieldset을 보이게 한다.
			document.all.message.style.display="";
			//textarea에 서버에서 가져온 insert_data에 셋팅한 파라미터를 넣는다.
			document.form.confirm.value = insert_data;
		} else	{
			var error_msg = GridObj.GetMessage(); // 서버에서 전송한 상태코드값이 false라면 에러메세지를 가져온다.
			alert(error_msg);			
		}
	} else if(mode == "update") {
		if(GridObj.GetStatus() == "true") {// 서버에서 전송한 상태코드를 가져온다.
			//서버에서 update_data 셋팅한 파라미터를 가져온다.
			var update_data = GridObj.GetParam("update_data");		
			//fieldset을 보이게 한다.
			document.all.message.style.display="";
			//textarea에 서버에서 가져온 update_data 셋팅한 파라미터를 넣는다.
			document.form.confirm.value = update_data;
		} else	{
			var error_msg = GridObj.GetMessage();// 서버에서 전송한 상태코드값이 false라면 에러메세지를 가져온다.
			alert(error_msg);			
		}
	} else if(mode == "delete") {
		if(GridObj.GetStatus() == "true") {// 서버에서 전송한 상태코드를 가져온다.
			//서버에서 delete_data 셋팅한 파라미터를 가져온다.
			var delete_data = GridObj.GetParam("delete_data");			
			//fieldset을 보이게 한다.
			document.all.message.style.display="";
			//textarea에 서버에서 가져온 delete_data 셋팅한 파라미터를 넣는다.
			document.form.confirm.value = delete_data;
			for( i = 0 ; i < document.WiseGrid.GetRowCount(); i ++) {				
				if(document.WiseGrid.GetCellValue('SELECTED',i) == 1) {					
					document.WiseGrid.DeleteRow(i);
					i--;					
				}
			}
		} else {
			var error_msg = GridObj.GetMessage();// 서버에서 전송한 상태코드값이 false라면 에러메세지를 가져온다.
			alert(error_msg);			
		}
	}
}

function getdatetime() {
	var today = new Date();
	var year = today.getYear();
	var month = today.getMonth() + 1;
	var day = today.getDate();
	
	if(month < 10)
		month = "0" + month;
		
	if(day < 10)
		day = "0" + day;

	document.form.to_date.value = year + "" + month + "" + day;
}

</script>
</head>

<body>
<form name="form">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr height="20">
    <td class="title1_k">
    	&nbsp;기본예제<br><hr>
    </td>
  </tr>
  <tr height="20">
    <td class="title2_k">
			&nbsp;&nbsp;&nbsp; 기본
    </td>
  </tr> 
</table>

<table width="100%" border="0" cellspacing="0" cellpadding="0">
	<tr>
		<td>
			<table width="98%" border="0" cellspacing="0" cellpadding="0"  class="title3">
				<tr>
					<td><br>
						<img src="/images/ico_question.gif" width="9" height="10" align="absmiddle"> 
						<img src="/images/ico_link.gif" width="15" height="11" align="absmiddle"> <font color=#1B74A9>
						현재 화면은 Header의 Size가 %로 정의된 화면입니다. 브라우저의 사이즈를 변경하면 Header의 사이즈가 동적으로 변경됩니다.</font><br>
						<hr>						
					</td>
				</tr>
			</table>
		</td>
	</tr>
</table>
<table width="98%" border="0" cellspacing="0" cellpadding="0"  class="title3">
	<tr>
		<table width="100%" border="0" cellpadding="2" cellspacing="0" >
			<tr>
				<td width="80">등록일</td>
				<td>
					<input type="text" name="from_date" size="8" value="20070101"> ~
					<input type="text" name="to_date" size="8" value="">
				</td>
				<td valign="top" align="right">
					<table border=0 cellpadding="0" cellspacing="0">
						<tr>
							<td><script language="javascript">btn("doQuery()","조회")</script></td>								
						</tr>
					</table>
				 </td>
			</tr>
		</table>
	  </tr>
</table>

 <table width="100%" border="0" cellpadding="0" cellspacing="0"  >
	<tr> 
		<td bgcolor="#00455d" height="3"></td>
	</tr>
	<tr>
		<td align='left'>
			<script>initWiseGrid("WiseGrid", "100%", "350");</script>
		</td>
	</tr>
</table>

<br>
<!-- 등록, 수정, 삭제가 실행되면 발생한다.-->
<div id='message' style="display:none ">
	<fieldset >
		<legend> [변경된 내용] </legend>
		<textarea name="confirm" cols="101" rows="8" style="border:0px" scrolling="auto"  />
	</fieldset>
</div>

</form>
</body>
</html>
